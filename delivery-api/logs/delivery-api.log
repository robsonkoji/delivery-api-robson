{"@timestamp":"2025-08-09T09:58:24.998021-03:00","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.2.Final"}
{"@timestamp":"2025-08-09T09:58:25.012534-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5065 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T09:58:25.01283-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T09:58:25.013265-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T09:58:25.032285-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@51d9b06c"}
{"@timestamp":"2025-08-09T09:58:25.704986-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:25.706177-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:25.797744-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 86 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T09:58:25.808596-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:25.809151-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:25.819807-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820201-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820462-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820842-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.822155-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.822293-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T09:58:26.069964-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-08-09T09:58:26.166535-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T09:58:26.16777-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-08-09T09:58:26.233365-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T09:58:26.264535-03:00","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.2.6.Final"}
{"@timestamp":"2025-08-09T09:58:26.26569-03:00","logger_name":"org.hibernate.cfg.Environment","message":"HHH000406: Using bytecode reflection optimizer"}
{"@timestamp":"2025-08-09T09:58:26.327962-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:26.388413-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T09:58:26.530065-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:26.930131-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T09:58:26.972101-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:27.160805-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T09:58:27.185862-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T09:58:27.240302-03:00","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used."}
{"@timestamp":"2025-08-09T09:58:28.638667-03:00","logger_name":"io.micrometer.core.instrument.MeterRegistry","message":"This Gauge has been already registered (MeterId{name='usuarios.ativos', tags=[]}), the registration will be ignored. Note that subsequent logs will be logged at debug level."}
{"@timestamp":"2025-08-09T09:58:28.766552-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:28.834141-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:28.93844-03:00","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 13 endpoints beneath base path '/actuator'"}
{"@timestamp":"2025-08-09T09:58:29.099257-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:29.12839-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:29.341784-03:00","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'"}
{"@timestamp":"2025-08-09T09:58:29.411236-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.754 seconds (process running for 5.39)"}
{"@timestamp":"2025-08-09T09:58:29.48812-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@51d9b06c, started on Sat Aug 09 09:58:25 BRT 2025"}
{"@timestamp":"2025-08-09T09:58:29.571871-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:29.591293-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T09:58:29.593286-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-08-09T09:58:29.596024-03:00","logger_name":"org.springframework.boot.devtools.restart.RestartApplicationListener","message":"Restart disabled due to context in which it is running"}
{"@timestamp":"2025-08-09T09:58:29.63306-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5065 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T09:58:29.633466-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T09:58:29.633621-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T09:58:29.635588-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59527c30"}
{"@timestamp":"2025-08-09T09:58:29.913051-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:29.913245-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:29.929643-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T09:58:29.932679-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:29.932841-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:29.938912-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939134-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939263-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939386-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939542-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939656-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T09:58:30.022084-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Starting..."}
{"@timestamp":"2025-08-09T09:58:30.023981-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T09:58:30.02417-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Start completed."}
{"@timestamp":"2025-08-09T09:58:30.048096-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T09:58:30.054985-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:30.05528-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T09:58:30.079955-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:30.197428-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T09:58:30.225144-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:30.256031-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T09:58:30.26219-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T09:58:30.424762-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:30.450394-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:30.498878-03:00","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 13 endpoints beneath base path '/actuator'"}
{"@timestamp":"2025-08-09T09:58:30.57551-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:30.583814-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:30.645693-03:00","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'"}
{"@timestamp":"2025-08-09T09:58:30.672139-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 1.076 seconds (process running for 6.651)"}
{"@timestamp":"2025-08-09T09:58:31.629498-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante não encontrado para id=1"}
{"@timestamp":"2025-08-09T09:58:31.6518-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@59527c30, started on Sat Aug 09 09:58:29 BRT 2025"}
{"@timestamp":"2025-08-09T09:58:31.66465-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:31.669001-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T09:58:31.669944-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown completed."}
{"@timestamp":"2025-08-09T10:04:18.927025-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5432 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:04:18.93179-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:04:18.932336-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:04:18.94502-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:04:20.893949-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:04:22.008731-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:04:22.065065-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:04:22.29767-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:04:22.321098-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:04:22.513609-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.905 seconds (process running for 4.438)"}
{"@timestamp":"2025-08-09T10:04:22.572141-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:04:18 BRT 2025"}
{"@timestamp":"2025-08-09T10:12:18.050442-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5917 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:12:18.054084-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:12:18.054596-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:12:18.070625-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:12:20.35333-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:12:22.011024-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:12:22.093471-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:12:22.431035-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:12:22.469505-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:12:22.733247-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.014 seconds (process running for 5.627)"}
{"@timestamp":"2025-08-09T10:12:23.629657-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve ser nulo', propertyPath=taxaEntrega, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotNull.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=telefone, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=categoria, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:39)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:12:23.659873-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:12:18 BRT 2025"}
{"@timestamp":"2025-08-09T10:36:44.930472-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7370 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:36:44.934834-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:36:44.935493-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:36:44.949309-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:36:46.955554-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:36:48.151124-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:36:48.207769-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:36:48.428683-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:36:48.450961-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:36:48.61556-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.026 seconds (process running for 4.591)"}
{"@timestamp":"2025-08-09T10:36:49.340786-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=categoria, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve ser nulo', propertyPath=taxaEntrega, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotNull.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=telefone, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:39)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:36:49.363709-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:36:44 BRT 2025"}
{"@timestamp":"2025-08-09T10:38:23.928499-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7527 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:38:23.933401-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:38:23.933995-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:38:23.948013-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7a34f66a"}
{"@timestamp":"2025-08-09T10:38:25.949656-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:38:27.09236-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:38:27.160442-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:38:27.375783-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:38:27.399175-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:38:27.575122-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.979 seconds (process running for 4.558)"}
{"@timestamp":"2025-08-09T10:38:28.175913-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=endereco, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:42)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:38:28.194057-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@7a34f66a, started on Sat Aug 09 10:38:23 BRT 2025"}
{"@timestamp":"2025-08-09T10:39:24.558747-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7707 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:39:24.564223-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:39:24.564892-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:39:24.583998-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:39:27.930722-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:39:30.260063-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:39:30.376092-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:39:30.811615-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:39:30.863183-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:39:31.262855-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 7.164 seconds (process running for 7.788)"}
{"@timestamp":"2025-08-09T10:39:32.734548-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T10:39:32.880864-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:39:24 BRT 2025"}
{"@timestamp":"2025-08-09T12:31:31.125244-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 13754 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:31:31.129428-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:31:31.130025-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:31:31.147978-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:31:33.140355-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:31:33.143982-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:31:33.145012-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:31:33.145927-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:31:33.146445-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:31:33.146891-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:31:33.149839-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.151074-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.152514-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.154586-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.155839-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.157575-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.1589-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:31:33.159939-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:31:33.16088-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:31:33.161873-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:31:33.162833-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:31:33.163953-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:31:33.165045-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:31:33.355821-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:31:34.506797-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:31:34.562279-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:31:34.77822-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:31:34.803506-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:31:34.995463-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.293 seconds (process running for 4.891)"}
{"@timestamp":"2025-08-09T12:31:35.639833-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:31:31 BRT 2025"}
{"@timestamp":"2025-08-09T12:31:35.656405-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:31:35.657372-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:31:35.658167-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:31:35.65876-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:31:35.65926-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:31:35.659732-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:37:06.643325-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 14409 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:37:06.649135-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:37:06.649639-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:37:06.6657-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:37:09.510744-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:37:09.51359-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:37:09.514643-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:37:09.515706-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:37:09.516697-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:37:09.517851-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:37:09.521898-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.523789-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.525989-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.528953-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.530639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.533411-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.536131-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:37:09.538272-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:37:09.540275-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:37:09.542545-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:37:09.544483-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:37:09.546608-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:37:09.548384-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:37:09.877791-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:37:11.960036-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:37:12.120901-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:37:12.564486-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:37:12.624541-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:37:13.125857-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 6.902 seconds (process running for 7.47)"}
{"@timestamp":"2025-08-09T12:37:14.311208-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:37:14.363346-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:37:14.409649-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:37:14.4282-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:37:14.648914-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:37:06 BRT 2025"}
{"@timestamp":"2025-08-09T12:37:14.692076-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:37:14.694914-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:37:14.696918-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:37:14.698478-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:37:14.69988-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:37:14.701365-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:40:23.795985-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 14717 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:40:23.809318-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:40:23.81175-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:40:23.86616-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:40:28.348344-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:40:28.355719-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:40:28.369018-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:40:28.371088-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:40:28.37394-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:40:28.376564-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:40:28.386024-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.389245-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.39393-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.400714-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.406531-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.410018-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.460376-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:40:28.505353-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:40:28.507992-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:40:28.560797-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:40:28.566606-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:40:28.570348-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:40:28.574331-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:40:29.290435-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:40:32.12618-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:40:32.298074-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:40:33.015263-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:40:33.094297-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:40:33.509959-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 10.93 seconds (process running for 12.009)"}
{"@timestamp":"2025-08-09T12:40:34.789683-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:40:34.843186-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:40:34.880741-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:40:34.89818-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:40:35.003756-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:40:23 BRT 2025"}
{"@timestamp":"2025-08-09T12:40:35.0393-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:40:35.041865-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:40:35.043309-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:40:35.044609-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:40:35.045939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:40:35.047253-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:43:49.581604-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 15054 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:43:49.586738-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:43:49.58733-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:43:49.612373-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2459319c"}
{"@timestamp":"2025-08-09T12:43:51.788247-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:43:51.794489-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:43:51.795347-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:43:51.796175-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:43:51.796886-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:43:51.797575-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:43:51.801079-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.802528-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.803939-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.806242-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.807634-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.8096-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.811451-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:43:51.812964-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:43:51.814244-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:43:51.815559-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:43:51.817013-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:43:51.818347-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:43:51.819595-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:43:52.059841-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:43:53.896141-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:43:54.051464-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:43:54.409419-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:43:54.448572-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:43:54.743421-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.502 seconds (process running for 6.041)"}
{"@timestamp":"2025-08-09T12:43:55.863818-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:43:55.903524-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:43:55.933264-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:43:55.946119-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:43:56.034195-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@2459319c, started on Sat Aug 09 12:43:49 BRT 2025"}
{"@timestamp":"2025-08-09T12:43:56.067693-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:43:56.070223-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:43:56.071726-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:43:56.072876-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:43:56.073779-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:43:56.074831-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:48:09.826247-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 15460 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:48:09.831125-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:48:09.831961-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:48:09.848459-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2459319c"}
{"@timestamp":"2025-08-09T12:48:12.783798-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:48:12.78784-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:48:12.79012-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:48:12.791921-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:48:12.793145-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:48:12.79466-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:48:12.808751-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.812955-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.815697-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.819798-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.822342-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.82588-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.830516-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:48:12.833329-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:48:12.836102-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:48:12.838199-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:48:12.840299-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:48:12.842699-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:48:12.844827-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:48:13.319991-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:48:16.429851-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:48:16.562867-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:48:17.145202-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:48:17.202706-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:48:17.628947-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 8.247 seconds (process running for 8.9)"}
{"@timestamp":"2025-08-09T12:48:19.00227-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:48:19.073151-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:48:19.179756-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@2459319c, started on Sat Aug 09 12:48:09 BRT 2025"}
{"@timestamp":"2025-08-09T12:48:19.224064-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:48:19.226212-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:48:19.227958-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:48:19.229549-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:48:19.230723-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:48:19.232216-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:59:45.370616-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16335 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:59:45.383645-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:59:45.384841-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:59:45.421434-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T12:59:49.754695-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:59:49.759251-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:59:49.76071-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:59:49.762001-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:59:49.762999-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:59:49.7641-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:59:49.769058-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.771445-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.773639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.778067-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.780709-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.78428-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.787641-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:59:49.790277-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:59:49.79284-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:59:49.795147-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:59:49.797584-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:59:49.799959-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:59:49.802283-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:59:50.250196-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:59:53.323789-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:59:53.405201-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:59:54.120913-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:59:54.178735-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:59:54.633147-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 10.41 seconds (process running for 11.913)"}
{"@timestamp":"2025-08-09T12:59:55.949319-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:59:55.991002-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:59:56.09223-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 12:59:45 BRT 2025"}
{"@timestamp":"2025-08-09T12:59:56.125047-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:59:56.126885-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:59:56.128831-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:59:56.130477-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:59:56.131628-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:59:56.13272-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:03:23.59524-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16693 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:03:23.60826-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:03:23.610002-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:03:23.647069-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:03:27.567635-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:03:27.572134-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:03:27.573449-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:03:27.574478-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:03:27.575554-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:03:27.576579-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:03:27.588995-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.591295-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.594053-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.599515-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.602353-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.60643-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.610813-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:03:27.613601-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:03:27.615859-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:03:27.618236-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:03:27.620567-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:03:27.623083-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:03:27.626143-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:03:28.364108-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:03:31.638648-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:03:31.738137-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:03:32.255641-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:03:32.308737-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:03:32.718759-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 9.903 seconds (process running for 10.663)"}
{"@timestamp":"2025-08-09T13:03:34.015666-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:03:34.06942-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:03:34.287732-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:03:23 BRT 2025"}
{"@timestamp":"2025-08-09T13:03:34.321734-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:03:34.323838-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:03:34.325312-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:03:34.326597-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:03:34.327758-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:03:34.328966-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:04:48.420857-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16844 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:04:48.425724-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:04:48.426211-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:04:48.438544-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:04:50.178362-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:04:50.180259-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:04:50.180875-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:04:50.181471-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:04:50.18185-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:04:50.18242-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:04:50.184877-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.185852-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.187113-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.189053-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.190058-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.192043-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.193797-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:04:50.195046-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:04:50.196056-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:04:50.197058-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:04:50.198271-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:04:50.199607-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:04:50.200726-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:04:50.403734-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:04:51.590971-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:04:51.627262-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:04:51.856101-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:04:51.879323-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:04:52.071543-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.977 seconds (process running for 4.475)"}
{"@timestamp":"2025-08-09T13:04:52.654706-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:04:52.674175-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:04:52.76009-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:04:48 BRT 2025"}
{"@timestamp":"2025-08-09T13:04:52.775238-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:04:52.776453-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:04:52.777102-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:04:52.777541-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:04:52.777964-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:04:52.778408-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:06:13.903881-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Starting ClienteControllerIT using Java 21.0.7 with PID 16975 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:06:13.908486-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:06:13.909062-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:06:13.917748-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@16872c4d"}
{"@timestamp":"2025-08-09T13:06:16.074048-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:06:16.076608-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:06:16.077563-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:06:16.07833-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:06:16.078802-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:06:16.079378-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:06:16.083769-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.085885-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.087365-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.090062-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.091457-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.093674-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.095514-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:06:16.096841-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:06:16.098366-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:06:16.09973-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:06:16.101083-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:06:16.102485-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:06:16.103916-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:06:16.390821-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:06:18.268605-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:06:18.388294-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:06:18.844553-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:06:18.894349-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:06:19.23444-03:00","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:06:19.234674-03:00","logger_name":"com.deliverytech.delivery.security.JwtAuthenticationFilter","message":"Filter 'jwtAuthenticationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:06:19.31921-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Started ClienteControllerIT in 5.775 seconds (process running for 6.315)"}
{"@timestamp":"2025-08-09T13:06:20.028619-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        usuarios\n        (ativo,data_criacao,email,nome,restaurante_id,role,senha,id) \n    values\n        (?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:06:20.284527-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        u1_0.id,\n        u1_0.ativo,\n        u1_0.data_criacao,\n        u1_0.email,\n        u1_0.nome,\n        u1_0.restaurante_id,\n        u1_0.role,\n        u1_0.senha \n    from\n        usuarios u1_0 \n    where\n        u1_0.email=?"}
{"@timestamp":"2025-08-09T13:06:20.305169-03:00","logger_name":"com.deliverytech.delivery.logging.CorrelationIdFilter","message":"Iniciando requisição [8477cea3-d1dd-4a73-a20c-1d3d3b200c71] POST /api/clientes"}
{"@timestamp":"2025-08-09T13:06:20.308636-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequest)"}
{"@timestamp":"2025-08-09T13:06:20.309311-03:00","logger_name":"com.deliverytech.delivery.logging.AuditLoggingInterceptor","message":"Incoming HTTP request: method=POST, uri=/api/clientes, correlationId=3b464fc4-89ba-4079-a24d-e5be092294cf"}
{"@timestamp":"2025-08-09T13:06:20.344858-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ClienteRequest(nome=João Silva, email=joao@email.com, telefone=11900000000, endereco=av.01 00000-000 (truncated)...]"}
{"@timestamp":"2025-08-09T13:06:20.399149-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        c1_0.id \n    from\n        cliente c1_0 \n    where\n        c1_0.email=? fetch first ? rows only"}
{"@timestamp":"2025-08-09T13:06:20.406444-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        cliente\n        (ativo,data_criacao,email,endereco,nome,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:06:20.410428-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[3b464fc4-89ba-4079-a24d-e5be092294cf] Cliente cadastrado com sucesso: id=1, email=joao@email.com"}
{"@timestamp":"2025-08-09T13:06:20.835939-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]"}
{"@timestamp":"2025-08-09T13:06:20.841222-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [ApiWrapperResponse[status=201, mensagem=Criado com sucesso, dados=ClienteResponse(id=1, nome=João Si (truncated)...]"}
{"@timestamp":"2025-08-09T13:06:20.850477-03:00","logger_name":"com.deliverytech.delivery.logging.AuditLoggingInterceptor","message":"HTTP response: status=201, correlationId=3b464fc4-89ba-4079-a24d-e5be092294cf"}
{"@timestamp":"2025-08-09T13:06:20.894337-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@16872c4d, started on Sat Aug 09 13:06:13 BRT 2025"}
{"@timestamp":"2025-08-09T13:06:20.921156-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:06:20.92305-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:06:20.924294-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:06:20.925239-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:06:20.926155-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:06:20.926987-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:25.555652-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 20075 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:37:25.5641-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:37:25.564584-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:37:25.593155-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@21022cbb"}
{"@timestamp":"2025-08-09T13:37:30.00514-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:37:30.011676-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:37:30.013507-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:37:30.014967-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:37:30.016053-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:37:30.017353-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:30.02731-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.029749-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.032025-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.036712-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.038829-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.041842-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.044866-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:37:30.047464-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:37:30.049743-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:37:30.052-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:37:30.054524-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:37:30.05685-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:37:30.05911-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:37:30.722091-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:37:34.120525-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:37:34.153145-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': Injection of autowired dependencies failed"}
{"@timestamp":"2025-08-09T13:37:34.199784-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:37:34.202738-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:37:34.204644-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:37:34.206162-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:37:34.207775-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:37:34.209205-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:34.312583-03:00","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of method mappingJackson2HttpMessageConverter in org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration required a single bean, but 2 were found:\n\t- restObjectMapper: defined by method 'restObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\t- redisObjectMapper: defined by method 'redisObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\nThis may be due to missing parameter name information\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)\n\n"}
{"@timestamp":"2025-08-09T13:37:38.735689-03:00","logger_name":"com.deliverytech.delivery.service.impl.PedidoServiceImpl","message":"[N/A] Pedido criado: id=500, clienteId=1, restauranteId=10"}
{"@timestamp":"2025-08-09T13:37:38.814543-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente cadastrado com sucesso: id=1, email=robson@email.com"}
{"@timestamp":"2025-08-09T13:37:38.831668-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] BusinessException ao cadastrar cliente: Cliente com email já cadastrado"}
{"@timestamp":"2025-08-09T13:37:38.83926-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente não encontrado por ID: 1"}
{"@timestamp":"2025-08-09T13:37:38.844876-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente encontrado por ID: 1"}
{"@timestamp":"2025-08-09T13:38:11.467675-03:00","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.2.Final"}
{"@timestamp":"2025-08-09T13:38:11.488269-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"Starting DeliveryApiApplication using Java 21.0.7 with PID 20305 (/Users/robson/Documents/delivery-api-robson/delivery-api/target/classes started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:38:11.488568-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:38:11.488878-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T13:38:11.508124-03:00","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable"}
{"@timestamp":"2025-08-09T13:38:11.508273-03:00","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'"}
{"@timestamp":"2025-08-09T13:38:12.107611-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T13:38:12.108628-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T13:38:12.195933-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 82 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T13:38:12.204104-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T13:38:12.20462-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T13:38:12.2163-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216527-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216648-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216761-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.217195-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.217271-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T13:38:12.506857-03:00","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-08-09T13:38:12.514968-03:00","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8080\"]"}
{"@timestamp":"2025-08-09T13:38:12.515934-03:00","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-08-09T13:38:12.516039-03:00","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.43]"}
{"@timestamp":"2025-08-09T13:38:12.534985-03:00","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-08-09T13:38:12.535164-03:00","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1027 ms"}
{"@timestamp":"2025-08-09T13:38:12.622321-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-08-09T13:38:12.712639-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T13:38:12.713386-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-08-09T13:38:12.766317-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T13:38:12.796024-03:00","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.2.6.Final"}
{"@timestamp":"2025-08-09T13:38:12.797284-03:00","logger_name":"org.hibernate.cfg.Environment","message":"HHH000406: Using bytecode reflection optimizer"}
{"@timestamp":"2025-08-09T13:38:12.863118-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T13:38:12.921499-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T13:38:13.053048-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T13:38:13.425912-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T13:38:13.432971-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:38:13.434259-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:38:13.434752-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:38:13.43509-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:38:13.435356-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:38:13.435656-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:38:13.438198-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.439023-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.439639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.440801-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.441325-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.442155-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.442909-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:38:13.443656-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:38:13.444257-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:38:13.444856-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:38:13.445431-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:38:13.446004-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:38:13.446569-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:38:13.449569-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T13:38:13.603592-03:00","logger_name":"com.deliverytech.delivery.security.JwtAuthenticationFilter","message":"Filter 'jwtAuthenticationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:38:13.604094-03:00","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:38:13.638106-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T13:38:13.64388-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:38:13.708329-03:00","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used."}
{"@timestamp":"2025-08-09T13:38:14.396548-03:00","logger_name":"io.micrometer.core.instrument.MeterRegistry","message":"This Gauge has been already registered (MeterId{name='usuarios.ativos', tags=[]}), the registration will be ignored. Note that subsequent logs will be logged at debug level."}
{"@timestamp":"2025-08-09T13:38:14.502696-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:38:14.515648-03:00","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': Injection of autowired dependencies failed"}
{"@timestamp":"2025-08-09T13:38:14.522969-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T13:38:14.523297-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:38:14.523836-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:38:14.524151-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:38:14.524421-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:38:14.524668-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:38:14.524911-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:38:14.527571-03:00","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]"}
{"@timestamp":"2025-08-09T13:38:14.527724-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T13:38:14.528476-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-08-09T13:38:14.530641-03:00","logger_name":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2025-08-09T13:38:14.542098-03:00","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled."}
{"@timestamp":"2025-08-09T13:38:14.551529-03:00","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of method mappingJackson2HttpMessageConverter in org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration required a single bean, but 2 were found:\n\t- restObjectMapper: defined by method 'restObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\t- redisObjectMapper: defined by method 'redisObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\nThis may be due to missing parameter name information\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)\n\n"}
{"@timestamp":"2025-08-09T13:45:56.285292-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 20944 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:45:56.296774-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:45:56.298053-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:45:56.34088-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:46:01.420908-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:46:01.42602-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:46:01.428071-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:46:01.429486-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:46:01.430675-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:46:01.432134-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:46:01.438405-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.440852-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.444051-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.448843-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.451609-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.455556-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.459791-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:46:01.462936-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:46:01.465478-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:46:01.468285-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:46:01.47087-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:46:01.473552-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:46:01.476304-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:46:02.020611-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:46:05.47179-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:46:05.624393-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:46:06.522142-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:46:06.599307-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:46:07.170374-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 11.695 seconds (process running for 12.636)"}
{"@timestamp":"2025-08-09T13:46:08.703363-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:46:08.753787-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:46:08.935555-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:45:56 BRT 2025"}
{"@timestamp":"2025-08-09T13:46:08.969854-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:46:08.971939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:46:08.973304-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:46:08.97447-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:46:08.975572-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:46:08.977015-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:49:05.032287-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 21301 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:49:05.042857-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:49:05.043935-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:49:05.076228-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:49:09.405257-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:49:09.409257-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:49:09.410647-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:49:09.412061-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:49:09.413221-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:49:09.414643-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:49:09.420379-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.423271-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.42578-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.43029-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.433099-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.436654-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.440406-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:49:09.443151-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:49:09.445587-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:49:09.448018-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:49:09.450308-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:49:09.45277-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:49:09.455948-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:49:09.894484-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:49:12.897477-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:49:12.995017-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:49:13.69882-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:49:13.754961-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:49:14.2074-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 10.023 seconds (process running for 12.032)"}
{"@timestamp":"2025-08-09T13:49:15.478816-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:49:15.526346-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:49:15.730185-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:49:05 BRT 2025"}
{"@timestamp":"2025-08-09T13:49:15.76498-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:49:15.766695-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:49:15.767915-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:49:15.768809-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:49:15.769674-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:49:15.771173-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:52:41.802559-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 21720 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:52:41.812684-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:52:41.813674-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:52:41.846113-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:52:46.625295-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:52:46.628872-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:52:46.630154-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:52:46.631664-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:52:46.632845-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:52:46.63424-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:52:46.640283-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.642809-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.645468-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.649637-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.652425-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.656199-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.659559-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:52:46.668888-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:52:46.671509-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:52:46.674077-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:52:46.67643-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:52:46.679259-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:52:46.68166-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:52:47.118138-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:52:49.991119-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:52:50.0762-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:52:50.757587-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:52:50.81377-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:52:51.271706-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 10.226 seconds (process running for 11.119)"}
{"@timestamp":"2025-08-09T13:52:52.545265-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:52:52.610723-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:52:52.777842-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:52:41 BRT 2025"}
{"@timestamp":"2025-08-09T13:52:52.810429-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:52:52.812671-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:52:52.814094-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:52:52.815264-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:52:52.81617-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:52:52.817694-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:06.924592-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22086 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:57:06.929751-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:57:06.930285-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:57:06.944095-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:57:09.163231-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:09.166308-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:09.167405-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:09.168275-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:09.169009-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:09.169717-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:09.173145-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.17471-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.176225-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.178978-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.180431-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.182809-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.184791-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:09.186305-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:57:09.187644-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:57:09.189006-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:57:09.190405-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:09.191788-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:09.193343-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:09.476564-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:57:11.401251-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:11.476557-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:11.939643-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:11.991773-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:12.375932-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 5.765 seconds (process running for 6.253)"}
{"@timestamp":"2025-08-09T13:57:13.549939-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:57:13.589959-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:57:13.748165-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:57:06 BRT 2025"}
{"@timestamp":"2025-08-09T13:57:13.776233-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:13.777977-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:13.779042-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:13.779978-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:13.780793-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:13.781867-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:29.748223-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22140 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:57:29.753399-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:57:29.753937-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:57:29.770499-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:57:31.759226-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:31.761205-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:31.761927-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:31.762511-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:31.763081-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:31.76365-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:31.769345-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.770677-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.772395-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.774641-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.775951-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.777907-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.779724-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:31.781008-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:57:31.782022-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:57:31.78303-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:57:31.784197-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:31.785353-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:31.786474-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:32.021121-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:57:33.776153-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:33.830933-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:34.181861-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:34.215218-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:34.503812-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 5.064 seconds (process running for 5.552)"}
{"@timestamp":"2025-08-09T13:57:35.434916-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:57:35.465284-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:57:35.607294-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:57:29 BRT 2025"}
{"@timestamp":"2025-08-09T13:57:35.6393-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:35.640807-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:35.64209-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:35.643087-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:35.644133-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:35.645196-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:09.571113-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22206 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:58:09.575387-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:58:09.57579-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:58:09.587351-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:58:11.358572-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:11.360345-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:11.360963-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:11.361541-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:11.361983-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:11.362586-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:11.368428-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.369882-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.371106-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.372889-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.374028-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.375626-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.37691-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:11.377834-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:58:11.37884-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:58:11.37984-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:58:11.380732-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:11.381645-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:11.382669-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:11.661618-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:58:12.747773-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:12.783955-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:13.022785-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:13.046567-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:13.277624-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.0 seconds (process running for 4.491)"}
{"@timestamp":"2025-08-09T13:58:13.856949-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:58:13.876708-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:58:13.952978-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:58:09 BRT 2025"}
{"@timestamp":"2025-08-09T13:58:13.971715-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:13.972701-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:13.973266-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:13.97378-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:13.974318-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:13.974832-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:28.521009-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22259 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:58:28.526249-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:58:28.526652-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:58:28.539242-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:58:30.251335-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:30.253158-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:30.253708-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:30.254659-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:30.255087-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:30.255742-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:30.258857-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.260052-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.261148-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.263104-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.264273-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.266044-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.267421-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:30.268377-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:58:30.269311-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:58:30.270255-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:58:30.271323-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:30.272518-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:30.273536-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:30.477328-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:58:31.875036-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:31.917448-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:32.196064-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:32.224125-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:32.458301-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.227 seconds (process running for 5.263)"}
{"@timestamp":"2025-08-09T13:58:33.183378-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:58:33.22979-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:58:33.384904-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:58:28 BRT 2025"}
{"@timestamp":"2025-08-09T13:58:33.406963-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:33.408353-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:33.409359-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:33.410188-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:33.410838-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:33.41166-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
