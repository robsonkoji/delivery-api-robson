{"@timestamp":"2025-08-09T09:58:24.998021-03:00","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.2.Final"}
{"@timestamp":"2025-08-09T09:58:25.012534-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5065 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T09:58:25.01283-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T09:58:25.013265-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T09:58:25.032285-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@51d9b06c"}
{"@timestamp":"2025-08-09T09:58:25.704986-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:25.706177-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:25.797744-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 86 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T09:58:25.808596-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:25.809151-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:25.819807-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820201-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820462-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.820842-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.822155-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:25.822293-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T09:58:26.069964-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-08-09T09:58:26.166535-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T09:58:26.16777-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-08-09T09:58:26.233365-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T09:58:26.264535-03:00","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.2.6.Final"}
{"@timestamp":"2025-08-09T09:58:26.26569-03:00","logger_name":"org.hibernate.cfg.Environment","message":"HHH000406: Using bytecode reflection optimizer"}
{"@timestamp":"2025-08-09T09:58:26.327962-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:26.388413-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T09:58:26.530065-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:26.930131-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T09:58:26.972101-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:27.160805-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T09:58:27.185862-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T09:58:27.240302-03:00","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used."}
{"@timestamp":"2025-08-09T09:58:28.638667-03:00","logger_name":"io.micrometer.core.instrument.MeterRegistry","message":"This Gauge has been already registered (MeterId{name='usuarios.ativos', tags=[]}), the registration will be ignored. Note that subsequent logs will be logged at debug level."}
{"@timestamp":"2025-08-09T09:58:28.766552-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:28.834141-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:28.93844-03:00","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 13 endpoints beneath base path '/actuator'"}
{"@timestamp":"2025-08-09T09:58:29.099257-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:29.12839-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:29.341784-03:00","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'"}
{"@timestamp":"2025-08-09T09:58:29.411236-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.754 seconds (process running for 5.39)"}
{"@timestamp":"2025-08-09T09:58:29.48812-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@51d9b06c, started on Sat Aug 09 09:58:25 BRT 2025"}
{"@timestamp":"2025-08-09T09:58:29.571871-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:29.591293-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T09:58:29.593286-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-08-09T09:58:29.596024-03:00","logger_name":"org.springframework.boot.devtools.restart.RestartApplicationListener","message":"Restart disabled due to context in which it is running"}
{"@timestamp":"2025-08-09T09:58:29.63306-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5065 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T09:58:29.633466-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T09:58:29.633621-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T09:58:29.635588-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@59527c30"}
{"@timestamp":"2025-08-09T09:58:29.913051-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:29.913245-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:29.929643-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T09:58:29.932679-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T09:58:29.932841-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T09:58:29.938912-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939134-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939263-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939386-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939542-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T09:58:29.939656-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T09:58:30.022084-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Starting..."}
{"@timestamp":"2025-08-09T09:58:30.023981-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T09:58:30.02417-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Start completed."}
{"@timestamp":"2025-08-09T09:58:30.048096-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T09:58:30.054985-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:30.05528-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T09:58:30.079955-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T09:58:30.197428-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T09:58:30.225144-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:30.256031-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T09:58:30.26219-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T09:58:30.424762-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:30.450394-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T09:58:30.498878-03:00","logger_name":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver","message":"Exposing 13 endpoints beneath base path '/actuator'"}
{"@timestamp":"2025-08-09T09:58:30.57551-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:30.583814-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T09:58:30.645693-03:00","logger_name":"org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration","message":"H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:deliverydb'"}
{"@timestamp":"2025-08-09T09:58:30.672139-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 1.076 seconds (process running for 6.651)"}
{"@timestamp":"2025-08-09T09:58:31.629498-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante não encontrado para id=1"}
{"@timestamp":"2025-08-09T09:58:31.6518-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@59527c30, started on Sat Aug 09 09:58:29 BRT 2025"}
{"@timestamp":"2025-08-09T09:58:31.66465-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T09:58:31.669001-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T09:58:31.669944-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-2 - Shutdown completed."}
{"@timestamp":"2025-08-09T10:04:18.927025-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5432 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:04:18.93179-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:04:18.932336-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:04:18.94502-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:04:20.893949-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:04:22.008731-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:04:22.065065-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:04:22.29767-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:04:22.321098-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:04:22.513609-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.905 seconds (process running for 4.438)"}
{"@timestamp":"2025-08-09T10:04:22.572141-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:04:18 BRT 2025"}
{"@timestamp":"2025-08-09T10:12:18.050442-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 5917 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:12:18.054084-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:12:18.054596-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:12:18.070625-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:12:20.35333-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:12:22.011024-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:12:22.093471-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:12:22.431035-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:12:22.469505-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:12:22.733247-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.014 seconds (process running for 5.627)"}
{"@timestamp":"2025-08-09T10:12:23.629657-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve ser nulo', propertyPath=taxaEntrega, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotNull.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=telefone, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=categoria, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:39)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:12:23.659873-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:12:18 BRT 2025"}
{"@timestamp":"2025-08-09T10:36:44.930472-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7370 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:36:44.934834-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:36:44.935493-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:36:44.949309-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:36:46.955554-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:36:48.151124-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:36:48.207769-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:36:48.428683-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:36:48.450961-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:36:48.61556-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.026 seconds (process running for 4.591)"}
{"@timestamp":"2025-08-09T10:36:49.340786-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=categoria, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve ser nulo', propertyPath=taxaEntrega, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotNull.message}'}\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=telefone, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:39)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:36:49.363709-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:36:44 BRT 2025"}
{"@timestamp":"2025-08-09T10:38:23.928499-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7527 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:38:23.933401-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:38:23.933995-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:38:23.948013-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@7a34f66a"}
{"@timestamp":"2025-08-09T10:38:25.949656-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:38:27.09236-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:38:27.160442-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:38:27.375783-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:38:27.399175-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:38:27.575122-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.979 seconds (process running for 4.558)"}
{"@timestamp":"2025-08-09T10:38:28.175913-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Erro ao cadastrar restaurante","stack_trace":"jakarta.validation.ConstraintViolationException: Validation failed for classes [com.deliverytech.delivery.entity.Restaurante] during persist time for groups [jakarta.validation.groups.Default, ]\nList of constraint violations:[\n\tConstraintViolationImpl{interpolatedMessage='não deve estar em branco', propertyPath=endereco, rootBeanClass=class com.deliverytech.delivery.entity.Restaurante, messageTemplate='{jakarta.validation.constraints.NotBlank.message}'}\n]\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:151)\n\tat org.hibernate.boot.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:81)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:186)\n\tat org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:75)\n\tat org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:674)\n\tat org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:291)\n\tat org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:272)\n\tat org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:322)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:363)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:277)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:180)\n\tat org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:140)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:175)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.persist(DefaultPersistEventListener.java:93)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:77)\n\tat org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:54)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)\n\tat org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)\n\tat org.hibernate.internal.SessionImpl.persist(SessionImpl.java:739)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:320)\n\tat jdk.proxy2/jdk.proxy2.$Proxy167.persist(Unknown Source)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:654)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:360)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:734)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy196.save(Unknown Source)\n\tat com.deliverytech.delivery.service.impl.RestauranteServiceImpl.cadastrarRestaurante(RestauranteServiceImpl.java:56)\n\tat com.deliverytech.delivery.cache.CacheIntegrationTest.deveArmazenarNoCacheAposPrimeiraChamada(CacheIntegrationTest.java:42)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:775)\n\tat org.junit.platform.commons.support.ReflectionSupport.invokeMethod(ReflectionSupport.java:479)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:161)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:152)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:91)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:112)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:94)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:87)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:216)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:212)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:201)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:170)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:94)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:59)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:142)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:58)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:94)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.lambda$execute$2(InterceptingLauncher.java:47)\n\tat org.junit.platform.launcher.core.ClasspathAlignmentCheckingLauncherInterceptor.intercept(ClasspathAlignmentCheckingLauncherInterceptor.java:25)\n\tat org.junit.platform.launcher.core.InterceptingLauncher.execute(InterceptingLauncher.java:46)\n\tat org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:52)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:70)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:520)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:748)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:443)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)\n"}
{"@timestamp":"2025-08-09T10:38:28.194057-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@7a34f66a, started on Sat Aug 09 10:38:23 BRT 2025"}
{"@timestamp":"2025-08-09T10:39:24.558747-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 7707 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T10:39:24.564223-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T10:39:24.564892-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T10:39:24.583998-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e"}
{"@timestamp":"2025-08-09T10:39:27.930722-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T10:39:30.260063-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T10:39:30.376092-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T10:39:30.811615-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:39:30.863183-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T10:39:31.262855-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 7.164 seconds (process running for 7.788)"}
{"@timestamp":"2025-08-09T10:39:32.734548-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T10:39:32.880864-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@71f0b72e, started on Sat Aug 09 10:39:24 BRT 2025"}
{"@timestamp":"2025-08-09T12:31:31.125244-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 13754 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:31:31.129428-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:31:31.130025-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:31:31.147978-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:31:33.140355-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:31:33.143982-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:31:33.145012-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:31:33.145927-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:31:33.146445-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:31:33.146891-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:31:33.149839-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.151074-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.152514-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.154586-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.155839-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.157575-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:31:33.1589-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:31:33.159939-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:31:33.16088-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:31:33.161873-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:31:33.162833-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:31:33.163953-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:31:33.165045-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:31:33.355821-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:31:34.506797-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:31:34.562279-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:31:34.77822-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:31:34.803506-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:31:34.995463-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.293 seconds (process running for 4.891)"}
{"@timestamp":"2025-08-09T12:31:35.639833-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:31:31 BRT 2025"}
{"@timestamp":"2025-08-09T12:31:35.656405-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:31:35.657372-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:31:35.658167-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:31:35.65876-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:31:35.65926-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:31:35.659732-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:37:06.643325-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 14409 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:37:06.649135-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:37:06.649639-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:37:06.6657-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:37:09.510744-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:37:09.51359-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:37:09.514643-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:37:09.515706-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:37:09.516697-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:37:09.517851-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:37:09.521898-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.523789-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.525989-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.528953-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.530639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.533411-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:37:09.536131-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:37:09.538272-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:37:09.540275-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:37:09.542545-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:37:09.544483-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:37:09.546608-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:37:09.548384-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:37:09.877791-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:37:11.960036-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:37:12.120901-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:37:12.564486-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:37:12.624541-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:37:13.125857-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 6.902 seconds (process running for 7.47)"}
{"@timestamp":"2025-08-09T12:37:14.311208-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:37:14.363346-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:37:14.409649-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:37:14.4282-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:37:14.648914-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:37:06 BRT 2025"}
{"@timestamp":"2025-08-09T12:37:14.692076-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:37:14.694914-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:37:14.696918-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:37:14.698478-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:37:14.69988-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:37:14.701365-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:40:23.795985-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 14717 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:40:23.809318-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:40:23.81175-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:40:23.86616-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61"}
{"@timestamp":"2025-08-09T12:40:28.348344-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:40:28.355719-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:40:28.369018-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:40:28.371088-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:40:28.37394-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:40:28.376564-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:40:28.386024-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.389245-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.39393-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.400714-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.406531-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.410018-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:40:28.460376-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:40:28.505353-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:40:28.507992-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:40:28.560797-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:40:28.566606-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:40:28.570348-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:40:28.574331-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:40:29.290435-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:40:32.12618-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:40:32.298074-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:40:33.015263-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:40:33.094297-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:40:33.509959-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 10.93 seconds (process running for 12.009)"}
{"@timestamp":"2025-08-09T12:40:34.789683-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:40:34.843186-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:40:34.880741-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:40:34.89818-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:40:35.003756-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@4aedaf61, started on Sat Aug 09 12:40:23 BRT 2025"}
{"@timestamp":"2025-08-09T12:40:35.0393-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:40:35.041865-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:40:35.043309-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:40:35.044609-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:40:35.045939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:40:35.047253-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:43:49.581604-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 15054 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:43:49.586738-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:43:49.58733-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:43:49.612373-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2459319c"}
{"@timestamp":"2025-08-09T12:43:51.788247-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:43:51.794489-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:43:51.795347-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:43:51.796175-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:43:51.796886-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:43:51.797575-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:43:51.801079-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.802528-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.803939-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.806242-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.807634-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.8096-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:43:51.811451-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:43:51.812964-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:43:51.814244-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:43:51.815559-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:43:51.817013-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:43:51.818347-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:43:51.819595-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:43:52.059841-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:43:53.896141-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:43:54.051464-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:43:54.409419-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:43:54.448572-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:43:54.743421-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.502 seconds (process running for 6.041)"}
{"@timestamp":"2025-08-09T12:43:55.863818-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:43:55.903524-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:43:55.933264-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:43:55.946119-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        r1_0.id,\n        r1_0.ativo,\n        r1_0.avaliacao,\n        r1_0.categoria,\n        r1_0.data_criacao,\n        r1_0.endereco,\n        r1_0.nome,\n        r1_0.taxa_entrega,\n        r1_0.telefone,\n        r1_0.usuario_id \n    from\n        restaurante r1_0 \n    where\n        r1_0.id=?"}
{"@timestamp":"2025-08-09T12:43:56.034195-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@2459319c, started on Sat Aug 09 12:43:49 BRT 2025"}
{"@timestamp":"2025-08-09T12:43:56.067693-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:43:56.070223-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:43:56.071726-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:43:56.072876-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:43:56.073779-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:43:56.074831-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:48:09.826247-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 15460 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:48:09.831125-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:48:09.831961-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:48:09.848459-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@2459319c"}
{"@timestamp":"2025-08-09T12:48:12.783798-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:48:12.78784-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:48:12.79012-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:48:12.791921-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:48:12.793145-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:48:12.79466-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:48:12.808751-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.812955-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.815697-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.819798-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.822342-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.82588-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:48:12.830516-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:48:12.833329-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:48:12.836102-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:48:12.838199-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:48:12.840299-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:48:12.842699-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:48:12.844827-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:48:13.319991-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:48:16.429851-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:48:16.562867-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:48:17.145202-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:48:17.202706-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:48:17.628947-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 8.247 seconds (process running for 8.9)"}
{"@timestamp":"2025-08-09T12:48:19.00227-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:48:19.073151-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:48:19.179756-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@2459319c, started on Sat Aug 09 12:48:09 BRT 2025"}
{"@timestamp":"2025-08-09T12:48:19.224064-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:48:19.226212-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:48:19.227958-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:48:19.229549-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:48:19.230723-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:48:19.232216-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:59:45.370616-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16335 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T12:59:45.383645-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T12:59:45.384841-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T12:59:45.421434-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T12:59:49.754695-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:59:49.759251-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:59:49.76071-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:59:49.762001-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:59:49.762999-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:59:49.7641-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T12:59:49.769058-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.771445-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.773639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.778067-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.780709-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.78428-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T12:59:49.787641-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:59:49.790277-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T12:59:49.79284-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T12:59:49.795147-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T12:59:49.797584-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:59:49.799959-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T12:59:49.802283-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T12:59:50.250196-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T12:59:53.323789-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T12:59:53.405201-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T12:59:54.120913-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:59:54.178735-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T12:59:54.633147-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 10.41 seconds (process running for 11.913)"}
{"@timestamp":"2025-08-09T12:59:55.949319-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T12:59:55.991002-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T12:59:56.09223-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 12:59:45 BRT 2025"}
{"@timestamp":"2025-08-09T12:59:56.125047-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T12:59:56.126885-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T12:59:56.128831-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T12:59:56.130477-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T12:59:56.131628-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T12:59:56.13272-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:03:23.59524-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16693 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:03:23.60826-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:03:23.610002-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:03:23.647069-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:03:27.567635-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:03:27.572134-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:03:27.573449-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:03:27.574478-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:03:27.575554-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:03:27.576579-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:03:27.588995-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.591295-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.594053-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.599515-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.602353-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.60643-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:03:27.610813-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:03:27.613601-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:03:27.615859-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:03:27.618236-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:03:27.620567-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:03:27.623083-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:03:27.626143-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:03:28.364108-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:03:31.638648-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:03:31.738137-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:03:32.255641-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:03:32.308737-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:03:32.718759-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 9.903 seconds (process running for 10.663)"}
{"@timestamp":"2025-08-09T13:03:34.015666-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:03:34.06942-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:03:34.287732-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:03:23 BRT 2025"}
{"@timestamp":"2025-08-09T13:03:34.321734-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:03:34.323838-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:03:34.325312-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:03:34.326597-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:03:34.327758-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:03:34.328966-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:04:48.420857-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 16844 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:04:48.425724-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:04:48.426211-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:04:48.438544-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:04:50.178362-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:04:50.180259-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:04:50.180875-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:04:50.181471-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:04:50.18185-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:04:50.18242-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:04:50.184877-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.185852-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.187113-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.189053-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.190058-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.192043-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:04:50.193797-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:04:50.195046-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:04:50.196056-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:04:50.197058-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:04:50.198271-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:04:50.199607-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:04:50.200726-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:04:50.403734-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:04:51.590971-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:04:51.627262-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:04:51.856101-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:04:51.879323-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:04:52.071543-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.977 seconds (process running for 4.475)"}
{"@timestamp":"2025-08-09T13:04:52.654706-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:04:52.674175-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:04:52.76009-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:04:48 BRT 2025"}
{"@timestamp":"2025-08-09T13:04:52.775238-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:04:52.776453-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:04:52.777102-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:04:52.777541-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:04:52.777964-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:04:52.778408-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:06:13.903881-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Starting ClienteControllerIT using Java 21.0.7 with PID 16975 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:06:13.908486-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:06:13.909062-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:06:13.917748-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@16872c4d"}
{"@timestamp":"2025-08-09T13:06:16.074048-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:06:16.076608-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:06:16.077563-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:06:16.07833-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:06:16.078802-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:06:16.079378-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:06:16.083769-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.085885-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.087365-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.090062-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.091457-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.093674-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:06:16.095514-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:06:16.096841-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:06:16.098366-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:06:16.09973-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:06:16.101083-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:06:16.102485-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:06:16.103916-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:06:16.390821-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:06:18.268605-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:06:18.388294-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:06:18.844553-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:06:18.894349-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:06:19.23444-03:00","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:06:19.234674-03:00","logger_name":"com.deliverytech.delivery.security.JwtAuthenticationFilter","message":"Filter 'jwtAuthenticationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:06:19.31921-03:00","logger_name":"com.deliverytech.delivery.controllers.ClienteControllerIT","message":"Started ClienteControllerIT in 5.775 seconds (process running for 6.315)"}
{"@timestamp":"2025-08-09T13:06:20.028619-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        usuarios\n        (ativo,data_criacao,email,nome,restaurante_id,role,senha,id) \n    values\n        (?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:06:20.284527-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        u1_0.id,\n        u1_0.ativo,\n        u1_0.data_criacao,\n        u1_0.email,\n        u1_0.nome,\n        u1_0.restaurante_id,\n        u1_0.role,\n        u1_0.senha \n    from\n        usuarios u1_0 \n    where\n        u1_0.email=?"}
{"@timestamp":"2025-08-09T13:06:20.305169-03:00","logger_name":"com.deliverytech.delivery.logging.CorrelationIdFilter","message":"Iniciando requisição [8477cea3-d1dd-4a73-a20c-1d3d3b200c71] POST /api/clientes"}
{"@timestamp":"2025-08-09T13:06:20.308636-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"Mapped to com.deliverytech.delivery.controller.ClienteController#cadastrarCliente(ClienteRequest)"}
{"@timestamp":"2025-08-09T13:06:20.309311-03:00","logger_name":"com.deliverytech.delivery.logging.AuditLoggingInterceptor","message":"Incoming HTTP request: method=POST, uri=/api/clientes, correlationId=3b464fc4-89ba-4079-a24d-e5be092294cf"}
{"@timestamp":"2025-08-09T13:06:20.344858-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor","message":"Read \"application/json;charset=UTF-8\" to [ClienteRequest(nome=João Silva, email=joao@email.com, telefone=11900000000, endereco=av.01 00000-000 (truncated)...]"}
{"@timestamp":"2025-08-09T13:06:20.399149-03:00","logger_name":"org.hibernate.SQL","message":"\n    select\n        c1_0.id \n    from\n        cliente c1_0 \n    where\n        c1_0.email=? fetch first ? rows only"}
{"@timestamp":"2025-08-09T13:06:20.406444-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        cliente\n        (ativo,data_criacao,email,endereco,nome,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:06:20.410428-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[3b464fc4-89ba-4079-a24d-e5be092294cf] Cliente cadastrado com sucesso: id=1, email=joao@email.com"}
{"@timestamp":"2025-08-09T13:06:20.835939-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/yaml]"}
{"@timestamp":"2025-08-09T13:06:20.841222-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor","message":"Writing [ApiWrapperResponse[status=201, mensagem=Criado com sucesso, dados=ClienteResponse(id=1, nome=João Si (truncated)...]"}
{"@timestamp":"2025-08-09T13:06:20.850477-03:00","logger_name":"com.deliverytech.delivery.logging.AuditLoggingInterceptor","message":"HTTP response: status=201, correlationId=3b464fc4-89ba-4079-a24d-e5be092294cf"}
{"@timestamp":"2025-08-09T13:06:20.894337-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@16872c4d, started on Sat Aug 09 13:06:13 BRT 2025"}
{"@timestamp":"2025-08-09T13:06:20.921156-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:06:20.92305-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:06:20.924294-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:06:20.925239-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:06:20.926155-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:06:20.926987-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:25.555652-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 20075 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:37:25.5641-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:37:25.564584-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:37:25.593155-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@21022cbb"}
{"@timestamp":"2025-08-09T13:37:30.00514-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:37:30.011676-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:37:30.013507-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:37:30.014967-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:37:30.016053-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:37:30.017353-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:30.02731-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.029749-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.032025-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.036712-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.038829-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.041842-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:37:30.044866-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:37:30.047464-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:37:30.049743-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:37:30.052-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:37:30.054524-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:37:30.05685-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:37:30.05911-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:37:30.722091-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:37:34.120525-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:37:34.153145-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': Injection of autowired dependencies failed"}
{"@timestamp":"2025-08-09T13:37:34.199784-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:37:34.202738-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:37:34.204644-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:37:34.206162-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:37:34.207775-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:37:34.209205-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:37:34.312583-03:00","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of method mappingJackson2HttpMessageConverter in org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration required a single bean, but 2 were found:\n\t- restObjectMapper: defined by method 'restObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\t- redisObjectMapper: defined by method 'redisObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\nThis may be due to missing parameter name information\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)\n\n"}
{"@timestamp":"2025-08-09T13:37:38.735689-03:00","logger_name":"com.deliverytech.delivery.service.impl.PedidoServiceImpl","message":"[N/A] Pedido criado: id=500, clienteId=1, restauranteId=10"}
{"@timestamp":"2025-08-09T13:37:38.814543-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente cadastrado com sucesso: id=1, email=robson@email.com"}
{"@timestamp":"2025-08-09T13:37:38.831668-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] BusinessException ao cadastrar cliente: Cliente com email já cadastrado"}
{"@timestamp":"2025-08-09T13:37:38.83926-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente não encontrado por ID: 1"}
{"@timestamp":"2025-08-09T13:37:38.844876-03:00","logger_name":"com.deliverytech.delivery.service.impl.ClienteServiceImpl","message":"[N/A] Cliente encontrado por ID: 1"}
{"@timestamp":"2025-08-09T13:38:11.467675-03:00","logger_name":"org.hibernate.validator.internal.util.Version","message":"HV000001: Hibernate Validator 8.0.2.Final"}
{"@timestamp":"2025-08-09T13:38:11.488269-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"Starting DeliveryApiApplication using Java 21.0.7 with PID 20305 (/Users/robson/Documents/delivery-api-robson/delivery-api/target/classes started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:38:11.488568-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:38:11.488878-03:00","logger_name":"com.deliverytech.delivery.DeliveryApiApplication","message":"No active profile set, falling back to 1 default profile: \"default\""}
{"@timestamp":"2025-08-09T13:38:11.508124-03:00","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable"}
{"@timestamp":"2025-08-09T13:38:11.508273-03:00","logger_name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor","message":"For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'"}
{"@timestamp":"2025-08-09T13:38:12.107611-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T13:38:12.108628-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T13:38:12.195933-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 82 ms. Found 5 JPA repository interfaces."}
{"@timestamp":"2025-08-09T13:38:12.204104-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Multiple Spring Data modules found, entering strict repository configuration mode"}
{"@timestamp":"2025-08-09T13:38:12.20462-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Bootstrapping Spring Data Redis repositories in DEFAULT mode."}
{"@timestamp":"2025-08-09T13:38:12.2163-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ClienteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216527-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.PedidoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216648-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.ProdutoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.216761-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.RestauranteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.217195-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport","message":"Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.deliverytech.delivery.repository.UsuarioRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository"}
{"@timestamp":"2025-08-09T13:38:12.217271-03:00","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","message":"Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces."}
{"@timestamp":"2025-08-09T13:38:12.506857-03:00","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","message":"Tomcat initialized with port 8080 (http)"}
{"@timestamp":"2025-08-09T13:38:12.514968-03:00","logger_name":"org.apache.coyote.http11.Http11NioProtocol","message":"Initializing ProtocolHandler [\"http-nio-8080\"]"}
{"@timestamp":"2025-08-09T13:38:12.515934-03:00","logger_name":"org.apache.catalina.core.StandardService","message":"Starting service [Tomcat]"}
{"@timestamp":"2025-08-09T13:38:12.516039-03:00","logger_name":"org.apache.catalina.core.StandardEngine","message":"Starting Servlet engine: [Apache Tomcat/10.1.43]"}
{"@timestamp":"2025-08-09T13:38:12.534985-03:00","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/]","message":"Initializing Spring embedded WebApplicationContext"}
{"@timestamp":"2025-08-09T13:38:12.535164-03:00","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","message":"Root WebApplicationContext: initialization completed in 1027 ms"}
{"@timestamp":"2025-08-09T13:38:12.622321-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Starting..."}
{"@timestamp":"2025-08-09T13:38:12.712639-03:00","logger_name":"com.zaxxer.hikari.pool.HikariPool","message":"HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:deliverydb user=SA"}
{"@timestamp":"2025-08-09T13:38:12.713386-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Start completed."}
{"@timestamp":"2025-08-09T13:38:12.766317-03:00","logger_name":"org.hibernate.jpa.internal.util.LogHelper","message":"HHH000204: Processing PersistenceUnitInfo [name: default]"}
{"@timestamp":"2025-08-09T13:38:12.796024-03:00","logger_name":"org.hibernate.Version","message":"HHH000412: Hibernate ORM core version 6.2.6.Final"}
{"@timestamp":"2025-08-09T13:38:12.797284-03:00","logger_name":"org.hibernate.cfg.Environment","message":"HHH000406: Using bytecode reflection optimizer"}
{"@timestamp":"2025-08-09T13:38:12.863118-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T13:38:12.921499-03:00","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","message":"No LoadTimeWeaver setup: ignoring JPA class transformer"}
{"@timestamp":"2025-08-09T13:38:13.053048-03:00","logger_name":"org.hibernate.bytecode.internal.BytecodeProviderInitiator","message":"HHH000021: Bytecode provider name : bytebuddy"}
{"@timestamp":"2025-08-09T13:38:13.425912-03:00","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","message":"HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]"}
{"@timestamp":"2025-08-09T13:38:13.432971-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:38:13.434259-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:38:13.434752-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:38:13.43509-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:38:13.435356-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:38:13.435656-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:38:13.438198-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.439023-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.439639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.440801-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.441325-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.442155-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:38:13.442909-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:38:13.443656-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:38:13.444257-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:38:13.444856-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:38:13.445431-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:38:13.446004-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:38:13.446569-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:38:13.449569-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T13:38:13.603592-03:00","logger_name":"com.deliverytech.delivery.security.JwtAuthenticationFilter","message":"Filter 'jwtAuthenticationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:38:13.604094-03:00","logger_name":"org.springframework.web.filter.ServerHttpObservationFilter","message":"Filter 'webMvcObservationFilter' configured for use"}
{"@timestamp":"2025-08-09T13:38:13.638106-03:00","logger_name":"org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer","message":"Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService"}
{"@timestamp":"2025-08-09T13:38:13.64388-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:38:13.708329-03:00","logger_name":"org.springframework.data.jpa.repository.query.QueryEnhancerFactory","message":"Hibernate is in classpath; If applicable, HQL parser will be used."}
{"@timestamp":"2025-08-09T13:38:14.396548-03:00","logger_name":"io.micrometer.core.instrument.MeterRegistry","message":"This Gauge has been already registered (MeterId{name='usuarios.ativos', tags=[]}), the registration will be ignored. Note that subsequent logs will be logged at debug level."}
{"@timestamp":"2025-08-09T13:38:14.502696-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:38:14.515648-03:00","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': Injection of autowired dependencies failed"}
{"@timestamp":"2025-08-09T13:38:14.522969-03:00","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","message":"Closing JPA EntityManagerFactory for persistence unit 'default'"}
{"@timestamp":"2025-08-09T13:38:14.523297-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:38:14.523836-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:38:14.524151-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:38:14.524421-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:38:14.524668-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:38:14.524911-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:38:14.527571-03:00","logger_name":"org.springframework.beans.factory.support.DisposableBeanAdapter","message":"Invocation of destroy method failed on bean with name 'inMemoryDatabaseShutdownExecutor': org.h2.jdbc.JdbcSQLNonTransientConnectionException: Database is already closed (to disable automatic closing at VM shutdown, add \";DB_CLOSE_ON_EXIT=FALSE\" to the db URL) [90121-232]"}
{"@timestamp":"2025-08-09T13:38:14.527724-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown initiated..."}
{"@timestamp":"2025-08-09T13:38:14.528476-03:00","logger_name":"com.zaxxer.hikari.HikariDataSource","message":"HikariPool-1 - Shutdown completed."}
{"@timestamp":"2025-08-09T13:38:14.530641-03:00","logger_name":"org.apache.catalina.core.StandardService","message":"Stopping service [Tomcat]"}
{"@timestamp":"2025-08-09T13:38:14.542098-03:00","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","message":"\n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled."}
{"@timestamp":"2025-08-09T13:38:14.551529-03:00","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nParameter 0 of method mappingJackson2HttpMessageConverter in org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration required a single bean, but 2 were found:\n\t- restObjectMapper: defined by method 'restObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\t- redisObjectMapper: defined by method 'redisObjectMapper' in class path resource [com/deliverytech/delivery/config/CacheConfig.class]\n\nThis may be due to missing parameter name information\n\nAction:\n\nConsider marking one of the beans as @Primary, updating the consumer to accept multiple beans, or using @Qualifier to identify the bean that should be consumed\n\nEnsure that your compiler is configured to use the '-parameters' flag.\nYou may need to update both your build tool settings as well as your IDE.\n(See https://github.com/spring-projects/spring-framework/wiki/Spring-Framework-6.1-Release-Notes#parameter-name-retention)\n\n"}
{"@timestamp":"2025-08-09T13:45:56.285292-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 20944 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:45:56.296774-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:45:56.298053-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:45:56.34088-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:46:01.420908-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:46:01.42602-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:46:01.428071-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:46:01.429486-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:46:01.430675-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:46:01.432134-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:46:01.438405-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.440852-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.444051-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.448843-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.451609-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.455556-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:46:01.459791-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:46:01.462936-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:46:01.465478-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:46:01.468285-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:46:01.47087-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:46:01.473552-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:46:01.476304-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:46:02.020611-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:46:05.47179-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:46:05.624393-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:46:06.522142-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:46:06.599307-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:46:07.170374-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 11.695 seconds (process running for 12.636)"}
{"@timestamp":"2025-08-09T13:46:08.703363-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:46:08.753787-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:46:08.935555-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:45:56 BRT 2025"}
{"@timestamp":"2025-08-09T13:46:08.969854-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:46:08.971939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:46:08.973304-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:46:08.97447-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:46:08.975572-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:46:08.977015-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:49:05.032287-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 21301 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:49:05.042857-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:49:05.043935-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:49:05.076228-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T13:49:09.405257-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:49:09.409257-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:49:09.410647-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:49:09.412061-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:49:09.413221-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:49:09.414643-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:49:09.420379-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.423271-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.42578-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.43029-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.433099-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.436654-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:49:09.440406-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:49:09.443151-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:49:09.445587-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:49:09.448018-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:49:09.450308-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:49:09.45277-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:49:09.455948-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:49:09.894484-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:49:12.897477-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:49:12.995017-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:49:13.69882-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:49:13.754961-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:49:14.2074-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 10.023 seconds (process running for 12.032)"}
{"@timestamp":"2025-08-09T13:49:15.478816-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:49:15.526346-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:49:15.730185-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 13:49:05 BRT 2025"}
{"@timestamp":"2025-08-09T13:49:15.76498-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:49:15.766695-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:49:15.767915-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:49:15.768809-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:49:15.769674-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:49:15.771173-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:52:41.802559-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 21720 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:52:41.812684-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:52:41.813674-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:52:41.846113-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:52:46.625295-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:52:46.628872-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:52:46.630154-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:52:46.631664-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:52:46.632845-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:52:46.63424-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:52:46.640283-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.642809-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.645468-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.649637-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.652425-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.656199-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:52:46.659559-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:52:46.668888-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:52:46.671509-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:52:46.674077-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:52:46.67643-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:52:46.679259-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:52:46.68166-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:52:47.118138-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:52:49.991119-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:52:50.0762-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:52:50.757587-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:52:50.81377-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:52:51.271706-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 10.226 seconds (process running for 11.119)"}
{"@timestamp":"2025-08-09T13:52:52.545265-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:52:52.610723-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:52:52.777842-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:52:41 BRT 2025"}
{"@timestamp":"2025-08-09T13:52:52.810429-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:52:52.812671-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:52:52.814094-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:52:52.815264-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:52:52.81617-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:52:52.817694-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:06.924592-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22086 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:57:06.929751-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:57:06.930285-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:57:06.944095-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:57:09.163231-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:09.166308-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:09.167405-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:09.168275-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:09.169009-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:09.169717-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:09.173145-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.17471-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.176225-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.178978-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.180431-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.182809-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:09.184791-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:09.186305-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:57:09.187644-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:57:09.189006-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:57:09.190405-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:09.191788-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:09.193343-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:09.476564-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:57:11.401251-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:11.476557-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:11.939643-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:11.991773-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:12.375932-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 5.765 seconds (process running for 6.253)"}
{"@timestamp":"2025-08-09T13:57:13.549939-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:57:13.589959-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:57:13.748165-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:57:06 BRT 2025"}
{"@timestamp":"2025-08-09T13:57:13.776233-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:13.777977-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:13.779042-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:13.779978-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:13.780793-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:13.781867-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:29.748223-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22140 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:57:29.753399-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:57:29.753937-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:57:29.770499-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:57:31.759226-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:31.761205-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:31.761927-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:31.762511-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:31.763081-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:31.76365-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:57:31.769345-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.770677-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.772395-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.774641-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.775951-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.777907-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:57:31.779724-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:31.781008-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:57:31.782022-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:57:31.78303-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:57:31.784197-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:31.785353-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:57:31.786474-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:57:32.021121-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:57:33.776153-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:33.830933-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:57:34.181861-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:34.215218-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:57:34.503812-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 5.064 seconds (process running for 5.552)"}
{"@timestamp":"2025-08-09T13:57:35.434916-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:57:35.465284-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:57:35.607294-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:57:29 BRT 2025"}
{"@timestamp":"2025-08-09T13:57:35.6393-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:57:35.640807-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:57:35.64209-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:57:35.643087-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:57:35.644133-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:57:35.645196-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:09.571113-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22206 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:58:09.575387-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:58:09.57579-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:58:09.587351-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:58:11.358572-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:11.360345-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:11.360963-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:11.361541-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:11.361983-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:11.362586-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:11.368428-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.369882-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.371106-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.372889-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.374028-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.375626-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:11.37691-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:11.377834-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:58:11.37884-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:58:11.37984-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:58:11.380732-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:11.381645-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:11.382669-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:11.661618-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:58:12.747773-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:12.783955-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:13.022785-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:13.046567-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:13.277624-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.0 seconds (process running for 4.491)"}
{"@timestamp":"2025-08-09T13:58:13.856949-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:58:13.876708-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:58:13.952978-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:58:09 BRT 2025"}
{"@timestamp":"2025-08-09T13:58:13.971715-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:13.972701-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:13.973266-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:13.97378-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:13.974318-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:13.974832-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:28.521009-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 22259 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T13:58:28.526249-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T13:58:28.526652-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T13:58:28.539242-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T13:58:30.251335-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:30.253158-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:30.253708-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:30.254659-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:30.255087-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:30.255742-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T13:58:30.258857-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.260052-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.261148-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.263104-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.264273-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.266044-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T13:58:30.267421-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:30.268377-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T13:58:30.269311-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T13:58:30.270255-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T13:58:30.271323-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:30.272518-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T13:58:30.273536-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T13:58:30.477328-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T13:58:31.875036-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:31.917448-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T13:58:32.196064-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:32.224125-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T13:58:32.458301-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.227 seconds (process running for 5.263)"}
{"@timestamp":"2025-08-09T13:58:33.183378-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T13:58:33.22979-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T13:58:33.384904-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 13:58:28 BRT 2025"}
{"@timestamp":"2025-08-09T13:58:33.406963-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T13:58:33.408353-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T13:58:33.409359-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T13:58:33.410188-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T13:58:33.410838-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T13:58:33.41166-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:21:59.356359-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 24195 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:21:59.361021-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:21:59.36163-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:21:59.375366-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:22:01.4494-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:22:01.451289-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:22:01.45177-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:22:01.452153-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:22:01.452756-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:22:01.453903-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:22:01.457592-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.458763-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.460453-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.46282-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.463672-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.46547-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:22:01.466653-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:22:01.469515-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:22:01.472132-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:22:01.475023-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:22:01.477073-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:22:01.479085-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:22:01.480525-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:22:01.679698-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:22:02.895523-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:22:02.935927-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:22:03.17015-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:22:03.193849-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:22:03.385885-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.366 seconds (process running for 4.96)"}
{"@timestamp":"2025-08-09T14:22:04.014985-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:22:04.034777-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:22:04.078637-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:21:59 BRT 2025"}
{"@timestamp":"2025-08-09T14:22:04.094433-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:22:04.095326-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:22:04.095867-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:22:04.09632-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:22:04.096624-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:22:04.0969-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:24:38.689332-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 24412 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:24:38.693616-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:24:38.694186-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:24:38.707073-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe"}
{"@timestamp":"2025-08-09T14:24:40.55408-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:24:40.55621-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:24:40.556845-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:24:40.557659-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:24:40.558051-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:24:40.558842-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:24:40.561663-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.563134-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.564425-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.567132-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.568606-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.570544-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:24:40.572298-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:24:40.573629-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:24:40.575019-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:24:40.576179-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:24:40.577224-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:24:40.578197-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:24:40.57947-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:24:40.818194-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:24:42.366908-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:24:42.419827-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:24:42.779855-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:24:42.813684-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:24:43.083748-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.696 seconds (process running for 5.171)"}
{"@timestamp":"2025-08-09T14:24:43.96726-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:24:43.998345-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:24:44.067352-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe, started on Sat Aug 09 14:24:38 BRT 2025"}
{"@timestamp":"2025-08-09T14:24:44.091949-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:24:44.09325-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:24:44.094008-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:24:44.094822-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:24:44.095408-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:24:44.096043-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:25:49.681097-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 24547 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:25:49.68692-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:25:49.687522-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:25:49.703059-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:25:52.297513-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:25:52.300171-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:25:52.301136-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:25:52.302027-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:25:52.303056-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:25:52.303858-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:25:52.307654-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.309559-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.311325-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.319725-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.321649-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.324153-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:25:52.326435-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:25:52.32805-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:25:52.329656-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:25:52.330976-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:25:52.332548-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:25:52.333829-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:25:52.336112-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:25:52.704515-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:25:54.768533-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:25:54.840684-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:25:55.279986-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:25:55.325239-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:25:55.705074-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 6.359 seconds (process running for 6.841)"}
{"@timestamp":"2025-08-09T14:25:56.786179-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:25:56.825203-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:25:56.914691-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:25:49 BRT 2025"}
{"@timestamp":"2025-08-09T14:25:56.945329-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:25:56.947193-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:25:56.948768-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:25:56.95019-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:25:56.951155-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:25:56.952912-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:26:40.009042-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 24690 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:26:40.013943-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:26:40.014388-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:26:40.026076-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe"}
{"@timestamp":"2025-08-09T14:26:41.860636-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:26:41.862765-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:26:41.863438-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:26:41.864002-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:26:41.86455-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:26:41.865023-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:26:41.867812-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.869229-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.870654-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.873166-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.874708-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.876681-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:41.878554-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:26:41.879843-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:26:41.881036-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:26:41.882272-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:26:41.883454-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:26:41.884694-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:26:41.885791-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:26:42.107277-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:26:43.472815-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:26:43.521514-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:26:43.877962-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:26:43.919083-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:26:44.212185-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.494 seconds (process running for 4.988)"}
{"@timestamp":"2025-08-09T14:26:45.000679-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:26:45.028392-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:26:45.099288-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe, started on Sat Aug 09 14:26:40 BRT 2025"}
{"@timestamp":"2025-08-09T14:26:45.12092-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:26:45.122273-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:26:45.123105-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:26:45.124315-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:26:45.125242-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:26:45.126049-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:26:55.539315-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 24739 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:26:55.545716-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:26:55.546441-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:26:55.565232-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe"}
{"@timestamp":"2025-08-09T14:26:58.891693-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:26:58.895013-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:26:58.89628-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:26:58.897456-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:26:58.89839-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:26:58.899452-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:26:58.909129-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.911419-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.913785-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.917462-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.91951-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.922948-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:26:58.925887-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:26:58.928037-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:26:58.930062-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:26:58.932278-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:26:58.934317-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:26:58.936819-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:26:58.93912-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:26:59.340425-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:27:01.992919-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:27:02.084267-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:27:02.637429-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:27:02.685453-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:27:03.078163-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 8.007 seconds (process running for 8.524)"}
{"@timestamp":"2025-08-09T14:27:04.268708-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:27:04.322705-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:27:04.436075-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@31d6f3fe, started on Sat Aug 09 14:26:55 BRT 2025"}
{"@timestamp":"2025-08-09T14:27:04.470373-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:27:04.472438-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:27:04.47429-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:27:04.475555-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:27:04.476791-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:27:04.47798-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:29:38.731867-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 25082 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:29:38.743005-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:29:38.744865-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:29:38.77705-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:29:42.943626-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:29:42.947968-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:29:42.949704-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:29:42.950873-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:29:42.951911-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:29:42.953141-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:29:42.958962-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.961463-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.964215-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.968904-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.973635-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.977845-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:29:42.980887-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:29:42.983881-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:29:42.986646-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:29:42.989138-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:29:42.991501-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:29:42.994309-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:29:42.996888-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:29:43.428143-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:29:46.103838-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:29:46.184796-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:29:46.719097-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:29:46.785243-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:29:47.268973-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 9.207 seconds (process running for 10.088)"}
{"@timestamp":"2025-08-09T14:29:48.440376-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:29:48.480628-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:29:48.568528-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:29:38 BRT 2025"}
{"@timestamp":"2025-08-09T14:29:48.598843-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:29:48.601043-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:29:48.602297-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:29:48.603069-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:29:48.603797-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:29:48.604518-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:30:55.599752-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 25300 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:30:55.60482-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:30:55.605247-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:30:55.617965-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:30:57.418642-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:30:57.420674-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:30:57.421337-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:30:57.42191-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:30:57.422415-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:30:57.42292-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:30:57.425554-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.42672-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.427801-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.42987-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.430987-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.432675-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:30:57.43414-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:30:57.437715-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:30:57.43873-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:30:57.439715-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:30:57.440559-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:30:57.441474-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:30:57.442548-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:30:57.64509-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:30:58.817439-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:30:58.860851-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:30:59.136539-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:30:59.162497-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:30:59.384536-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.111 seconds (process running for 4.647)"}
{"@timestamp":"2025-08-09T14:31:00.084739-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:31:00.110263-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:31:00.200352-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:30:55 BRT 2025"}
{"@timestamp":"2025-08-09T14:31:00.217403-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:31:00.218502-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:31:00.219235-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:31:00.219911-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:31:00.22053-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:31:00.221634-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:31:05.758918-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 25339 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:31:05.765132-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:31:05.765848-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:31:05.785865-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T14:31:08.794453-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:31:08.797676-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:31:08.798858-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:31:08.799902-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:31:08.80076-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:31:08.801673-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:31:08.806483-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.808462-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.810394-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.813773-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.815733-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.81813-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:31:08.820649-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:31:08.822728-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:31:08.824371-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:31:08.826152-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:31:08.827996-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:31:08.829768-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:31:08.831506-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:31:09.206893-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:31:11.460083-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:31:11.537767-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:31:12.202365-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:31:12.263235-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:31:12.713628-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 7.422 seconds (process running for 8.077)"}
{"@timestamp":"2025-08-09T14:31:13.837147-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:31:13.877318-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:31:14.068081-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 14:31:05 BRT 2025"}
{"@timestamp":"2025-08-09T14:31:14.106517-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:31:14.108608-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:31:14.110066-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:31:14.111155-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:31:14.112776-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:31:14.114232-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:35:50.845173-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 25815 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:35:50.849427-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:35:50.849869-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:35:50.863882-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:35:53.053067-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:35:53.055828-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:35:53.056582-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:35:53.057191-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:35:53.057717-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:35:53.058395-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:35:53.061383-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.062734-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.063869-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.065911-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.067204-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.069011-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:35:53.070919-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:35:53.0721-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:35:53.076895-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:35:53.078087-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:35:53.079265-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:35:53.080596-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:35:53.081433-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:35:53.334253-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:35:55.116586-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:35:55.19375-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:35:55.597998-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:35:55.635446-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:35:55.945639-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 5.44 seconds (process running for 6.042)"}
{"@timestamp":"2025-08-09T14:35:57.067789-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:35:57.109501-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:35:57.265024-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:35:50 BRT 2025"}
{"@timestamp":"2025-08-09T14:35:57.293482-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:35:57.295291-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:35:57.296415-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:35:57.297395-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:35:57.298514-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:35:57.299731-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:40:27.772509-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 26249 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:40:27.776906-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:40:27.777345-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:40:27.79205-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:40:30.24956-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:40:30.25185-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:40:30.252661-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:40:30.253457-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:40:30.254236-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:40:30.254891-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:40:30.257813-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.259177-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.260424-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.262687-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.263768-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.265499-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:40:30.267065-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:40:30.268197-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:40:30.280473-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:40:30.282674-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:40:30.283695-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:40:30.285477-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:40:30.287922-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:40:30.527128-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:40:32.564131-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:40:32.621224-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:40:33.075772-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:40:33.115382-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:40:33.434713-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 6.035 seconds (process running for 6.642)"}
{"@timestamp":"2025-08-09T14:40:34.363901-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:40:34.437305-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:40:34.526559-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:40:27 BRT 2025"}
{"@timestamp":"2025-08-09T14:40:34.555786-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:40:34.557294-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:40:34.559029-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:40:34.559855-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:40:34.560515-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:40:34.561158-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:42:55.864563-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 26509 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:42:55.869444-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:42:55.869953-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:42:55.882846-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:42:57.798026-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:42:57.800275-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:42:57.801105-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:42:57.801852-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:42:57.802384-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:42:57.803086-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:42:57.805941-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.807238-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.808513-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.810685-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.81215-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.814003-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:42:57.815705-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:42:57.816829-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:42:57.817963-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:42:57.819008-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:42:57.820089-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:42:57.821421-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:42:57.822471-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:42:58.055946-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:42:59.612444-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:42:59.673339-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:43:00.035974-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:00.080319-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:00.385387-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.837 seconds (process running for 5.383)"}
{"@timestamp":"2025-08-09T14:43:01.232171-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:43:01.262461-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:43:01.326881-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:42:55 BRT 2025"}
{"@timestamp":"2025-08-09T14:43:01.375818-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:43:01.377404-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:43:01.378765-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:43:01.379642-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:43:01.380429-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:43:01.381344-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:43:06.790768-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 26557 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:43:06.800211-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:43:06.801273-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:43:06.826391-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:43:10.454857-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:43:10.45817-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:43:10.459222-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:43:10.46027-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:43:10.461063-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:43:10.462066-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:43:10.466426-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.468268-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.47579-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.479487-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.481772-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.486467-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:10.533989-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:43:10.540466-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:43:10.542865-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:43:10.545082-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:43:10.547613-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:43:10.550336-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:43:10.558635-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:43:11.034042-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:43:13.819126-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:43:13.902138-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:43:14.487449-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:14.551584-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:14.967454-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 8.729 seconds (process running for 9.221)"}
{"@timestamp":"2025-08-09T14:43:16.218566-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:43:16.27175-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:43:16.380925-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:43:06 BRT 2025"}
{"@timestamp":"2025-08-09T14:43:16.418099-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:43:16.420749-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:43:16.422427-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:43:16.423954-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:43:16.425193-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:43:16.426377-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:43:30.171616-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 26644 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:43:30.182285-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:43:30.183235-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:43:30.21498-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:43:34.573095-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:43:34.577834-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:43:34.579522-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:43:34.581108-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:43:34.582506-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:43:34.583934-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:43:34.589772-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.591954-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.594851-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.59929-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.601705-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.60526-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:43:34.608665-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:43:34.611086-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:43:34.61349-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:43:34.615959-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:43:34.61859-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:43:34.621137-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:43:34.62375-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:43:35.093597-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:43:37.993117-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:43:38.078746-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:43:38.598347-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:38.644382-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:43:39.049807-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 9.645 seconds (process running for 11.27)"}
{"@timestamp":"2025-08-09T14:43:40.22093-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:43:40.269471-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:43:40.439609-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:43:30 BRT 2025"}
{"@timestamp":"2025-08-09T14:43:40.467354-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:43:40.46905-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:43:40.47039-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:43:40.471424-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:43:40.472469-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:43:40.473545-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:52:54.976594-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 27633 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:52:54.984134-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:52:54.984991-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:52:55.007769-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:52:59.157564-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:52:59.16129-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:52:59.162568-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:52:59.164132-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:52:59.165026-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:52:59.16622-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:52:59.17179-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.174315-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.176945-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.181632-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.184043-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.189942-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:52:59.193583-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:52:59.196601-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:52:59.199076-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:52:59.201277-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:52:59.20341-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:52:59.205675-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:52:59.208502-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:52:59.83826-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:53:03.039225-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:53:03.149108-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:53:03.906791-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:53:03.987447-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:53:04.470935-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 10.015 seconds (process running for 10.711)"}
{"@timestamp":"2025-08-09T14:53:05.790124-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:53:05.838633-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:53:05.946031-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:52:55 BRT 2025"}
{"@timestamp":"2025-08-09T14:53:05.994566-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:53:05.99777-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:53:06.000056-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:53:06.001293-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:53:06.00272-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:53:06.00405-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:53:35.277177-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 27738 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:53:35.280889-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:53:35.281423-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:53:35.293312-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T14:53:37.098818-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:53:37.100683-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:53:37.101439-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:53:37.102098-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:53:37.102619-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:53:37.103229-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:53:37.105929-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.110778-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.112093-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.114192-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.116514-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.119823-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:53:37.121576-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:53:37.122594-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:53:37.124384-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:53:37.125711-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:53:37.12684-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:53:37.127909-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:53:37.129062-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:53:37.337702-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:53:38.781823-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:53:38.825917-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:53:39.131107-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:53:39.161009-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:53:39.422275-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 4.44 seconds (process running for 4.928)"}
{"@timestamp":"2025-08-09T14:53:40.198078-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:53:40.225643-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:53:40.286339-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 14:53:35 BRT 2025"}
{"@timestamp":"2025-08-09T14:53:40.305664-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:53:40.307493-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:53:40.308629-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:53:40.309358-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:53:40.31001-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:53:40.310716-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:56:33.806272-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 27969 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T14:56:33.811413-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T14:56:33.811962-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T14:56:33.823866-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T14:56:35.549893-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:56:35.551668-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:56:35.552253-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:56:35.552808-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:56:35.55335-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:56:35.553861-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T14:56:35.556459-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.557652-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.558934-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.56089-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.56179-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.563471-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T14:56:35.565133-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:56:35.566191-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T14:56:35.567009-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T14:56:35.567926-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T14:56:35.568853-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:56:35.569732-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T14:56:35.570767-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T14:56:35.762665-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T14:56:36.83643-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T14:56:36.875046-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T14:56:37.135966-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:56:37.159067-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T14:56:37.346044-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 3.904 seconds (process running for 4.42)"}
{"@timestamp":"2025-08-09T14:56:37.94267-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T14:56:37.962876-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T14:56:38.05266-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 14:56:33 BRT 2025"}
{"@timestamp":"2025-08-09T14:56:38.066874-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T14:56:38.067591-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T14:56:38.067964-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T14:56:38.0683-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T14:56:38.068638-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T14:56:38.068902-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:05:26.726626-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 28707 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:05:26.7312-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:05:26.731674-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:05:26.743158-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0"}
{"@timestamp":"2025-08-09T15:05:28.920522-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:05:28.92279-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:05:28.923688-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:05:28.924618-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:05:28.925222-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:05:28.925896-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:05:28.929639-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.931177-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.932559-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.935232-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.936607-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.953011-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:05:28.955391-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:05:28.957488-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:05:28.962578-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:05:28.964008-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:05:28.967377-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:05:28.970576-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:05:28.973287-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:05:29.290057-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:05:31.012568-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:05:31.08926-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:05:31.558866-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:05:31.609099-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:05:31.969821-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.57 seconds (process running for 6.068)"}
{"@timestamp":"2025-08-09T15:05:32.952213-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:05:32.984381-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:05:33.062287-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@23f3dbf0, started on Sat Aug 09 15:05:26 BRT 2025"}
{"@timestamp":"2025-08-09T15:05:33.094785-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:05:33.096245-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:05:33.097324-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:05:33.098239-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:05:33.099135-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:05:33.100054-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:17:07.671386-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 29744 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:17:07.678215-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:17:07.678759-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:17:07.695809-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:17:10.645312-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:17:10.648423-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:17:10.649939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:17:10.650969-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:17:10.651623-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:17:10.652635-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:17:10.657052-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.659416-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.661332-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.664807-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.666718-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.66941-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:10.671892-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:17:10.673535-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:17:10.675219-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:17:10.676887-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:17:10.678401-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:17:10.680139-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:17:10.683624-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:17:11.032688-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:17:13.928238-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:17:14.006566-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:17:14.61938-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:17:14.66897-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:17:15.068778-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 7.831 seconds (process running for 8.517)"}
{"@timestamp":"2025-08-09T15:17:16.252597-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:17:16.302198-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:17:16.394962-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:17:07 BRT 2025"}
{"@timestamp":"2025-08-09T15:17:16.427251-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:17:16.429226-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:17:16.430551-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:17:16.432155-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:17:16.433679-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:17:16.434708-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:17:45.854346-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Starting CachePerformanceTest using Java 21.0.7 with PID 29839 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:17:45.860268-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:17:45.860899-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:17:45.875843-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@165e389b"}
{"@timestamp":"2025-08-09T15:17:48.525915-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:17:48.528756-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:17:48.529825-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:17:48.53055-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:17:48.531369-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:17:48.532157-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:17:48.536371-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.538226-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.539963-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.542749-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.544284-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.546758-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:17:48.548689-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:17:48.550367-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:17:48.552023-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:17:48.553742-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:17:48.555332-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:17:48.556749-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:17:48.55849-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:17:48.88096-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:17:51.212628-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:17:51.288246-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:17:51.808099-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:17:51.856004-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:17:52.25474-03:00","logger_name":"com.deliverytech.delivery.cache.CachePerformanceTest","message":"Started CachePerformanceTest in 6.766 seconds (process running for 7.255)"}
{"@timestamp":"2025-08-09T15:17:53.360561-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:17:53.417494-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:17:53.537805-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@165e389b, started on Sat Aug 09 15:17:45 BRT 2025"}
{"@timestamp":"2025-08-09T15:17:53.574074-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:17:53.576264-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:17:53.577868-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:17:53.579742-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:17:53.581157-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:17:53.582843-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:21:20.459327-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 30166 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:21:20.46427-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:21:20.464763-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:21:20.478589-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:21:22.240832-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:21:22.242531-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:21:22.243179-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:21:22.24374-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:21:22.244185-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:21:22.244887-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:21:22.247568-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.248888-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.250005-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.25201-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.253061-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.255009-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:21:22.259183-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:21:22.261496-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:21:22.263886-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:21:22.26473-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:21:22.265367-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:21:22.265973-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:21:22.268905-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:21:22.556664-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:21:23.697518-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:21:23.735158-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:21:23.973013-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:21:23.996952-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:21:24.234419-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.081 seconds (process running for 4.611)"}
{"@timestamp":"2025-08-09T15:21:24.875878-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:21:24.896789-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:21:24.945762-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:21:20 BRT 2025"}
{"@timestamp":"2025-08-09T15:21:24.962859-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:21:24.963916-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:21:24.964572-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:21:24.965065-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:21:24.965484-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:21:24.965939-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:28:16.844319-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 30745 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:28:16.848537-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:28:16.849079-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:28:16.86349-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:28:18.925358-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:28:18.927678-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:28:18.928564-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:28:18.92926-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:28:18.929825-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:28:18.930485-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:28:18.933717-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.935266-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.93648-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.938945-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.940352-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.942377-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:18.94435-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:28:18.945838-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:28:18.94707-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:28:18.948244-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:28:18.949427-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:28:18.950651-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:28:18.951993-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:28:19.198297-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:28:20.842179-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:28:20.896594-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:28:21.338068-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:28:21.387757-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:28:21.854039-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.336 seconds (process running for 5.911)"}
{"@timestamp":"2025-08-09T15:28:22.909038-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:28:22.948876-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:28:23.043077-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:28:16 BRT 2025"}
{"@timestamp":"2025-08-09T15:28:23.077114-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:28:23.079838-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:28:23.081994-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:28:23.083496-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:28:23.08435-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:28:23.085368-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:28:40.920577-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 30854 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:28:40.930496-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:28:40.931551-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:28:40.959792-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:28:45.257421-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:28:45.261305-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:28:45.262738-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:28:45.26399-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:28:45.265014-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:28:45.266551-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:28:45.271372-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.273759-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.276015-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.279802-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.28188-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.285016-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:28:45.287424-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:28:45.289553-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:28:45.291677-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:28:45.293932-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:28:45.295905-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:28:45.298225-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:28:45.301118-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:28:45.739272-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:28:48.465508-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:28:48.597634-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:28:49.340887-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:28:49.404407-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:28:49.841001-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 9.536 seconds (process running for 10.446)"}
{"@timestamp":"2025-08-09T15:28:51.121861-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:28:51.181007-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:28:51.39602-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:28:40 BRT 2025"}
{"@timestamp":"2025-08-09T15:28:51.434001-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:28:51.435975-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:28:51.437397-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:28:51.438681-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:28:51.440025-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:28:51.441322-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:29:48.671053-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 31043 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:29:48.67508-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:29:48.675734-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:29:48.688939-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:29:50.627346-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:29:50.629457-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:29:50.630152-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:29:50.630788-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:29:50.631429-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:29:50.632125-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:29:50.63505-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.636244-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.637516-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.639589-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.640812-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.642621-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:29:50.644351-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:29:50.648622-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:29:50.649847-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:29:50.650974-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:29:50.652035-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:29:50.653201-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:29:50.654459-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:29:50.877442-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:29:52.28774-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:29:52.33446-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:29:52.64778-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:29:52.681423-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:29:52.957418-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 4.624 seconds (process running for 5.262)"}
{"@timestamp":"2025-08-09T15:29:53.802378-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:29:53.836271-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:29:53.918059-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:29:48 BRT 2025"}
{"@timestamp":"2025-08-09T15:29:53.939743-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:29:53.941518-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:29:53.942437-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:29:53.94308-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:29:53.94419-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:29:53.945026-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:40:06.301926-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Starting CacheIntegrationTest using Java 21.0.7 with PID 32064 (started by robson in /Users/robson/Documents/delivery-api-robson/delivery-api)"}
{"@timestamp":"2025-08-09T15:40:06.305773-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Running with Spring Boot v3.5.4, Spring v6.2.9"}
{"@timestamp":"2025-08-09T15:40:06.30618-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"The following 1 profile is active: \"test\""}
{"@timestamp":"2025-08-09T15:40:06.321093-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Refreshing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb"}
{"@timestamp":"2025-08-09T15:40:08.479086-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:40:08.481504-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:40:08.482332-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:40:08.483092-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:40:08.483683-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:40:08.484277-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
{"@timestamp":"2025-08-09T15:40:08.487295-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table cliente (\n        ativo boolean not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        email varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.48902-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table item_pedido (\n        preco_unitario numeric(38,2),\n        quantidade integer not null,\n        subtotal numeric(38,2),\n        id bigint generated by default as identity,\n        pedido_id bigint,\n        produto_id bigint,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.490271-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table pedido (\n        subtotal numeric(38,2),\n        taxa_entrega numeric(38,2),\n        valor_total numeric(38,2),\n        cliente_id bigint,\n        data_criacao timestamp(6),\n        data_pedido timestamp(6),\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        endereco_entrega varchar(255),\n        observacoes varchar(255),\n        status varchar(255) check (status in ('PENDENTE','CONFIRMADO','EM_PREPARACAO','SAIU_PARA_ENTREGA','ENTREGUE','CANCELADO')),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.492413-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table produto (\n        disponivel boolean not null,\n        estoque integer not null,\n        preco numeric(38,2) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        categoria varchar(255),\n        descricao varchar(255),\n        nome varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.493736-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table restaurante (\n        ativo boolean,\n        avaliacao numeric(38,2),\n        taxa_entrega numeric(38,2) not null,\n        data_criacao timestamp(6),\n        id bigint generated by default as identity,\n        usuario_id bigint,\n        categoria varchar(255),\n        endereco varchar(255),\n        nome varchar(255),\n        telefone varchar(255),\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.495743-03:00","logger_name":"org.hibernate.SQL","message":"\n    create table usuarios (\n        ativo boolean not null,\n        data_criacao timestamp(6) not null,\n        id bigint generated by default as identity,\n        restaurante_id bigint,\n        email varchar(255) not null unique,\n        nome varchar(255) not null,\n        role varchar(255) not null check (role in ('CLIENTE','RESTAURANTE','ENTREGADOR','ADMIN')),\n        senha varchar(255) not null,\n        primary key (id)\n    )"}
{"@timestamp":"2025-08-09T15:40:08.497546-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists cliente \n       add constraint FK3rx8shpw8t7s3nid40ykcsekc \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:40:08.498785-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FK60ym08cfoysa17wrn1swyiuda \n       foreign key (pedido_id) \n       references pedido"}
{"@timestamp":"2025-08-09T15:40:08.49999-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists item_pedido \n       add constraint FKtk55mn6d6bvl5h0no5uagi3sf \n       foreign key (produto_id) \n       references produto"}
{"@timestamp":"2025-08-09T15:40:08.501256-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK30s8j2ktpay6of18lbyqn3632 \n       foreign key (cliente_id) \n       references cliente"}
{"@timestamp":"2025-08-09T15:40:08.502489-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists pedido \n       add constraint FK3eud5cqmgsnltyk704hu3qj71 \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:40:08.503598-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists produto \n       add constraint FKb9jhjyghjcn25guim7q4pt8qx \n       foreign key (restaurante_id) \n       references restaurante"}
{"@timestamp":"2025-08-09T15:40:08.504732-03:00","logger_name":"org.hibernate.SQL","message":"\n    alter table if exists restaurante \n       add constraint FKlki9ww8l6wau6yf4kc3wlvu8x \n       foreign key (usuario_id) \n       references usuarios"}
{"@timestamp":"2025-08-09T15:40:08.767112-03:00","logger_name":"com.deliverytech.delivery.service.impl.UsuarioServiceImpl","message":"[N/A] Gauge 'usuarios_ativos' registrado com sucesso."}
{"@timestamp":"2025-08-09T15:40:10.402669-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping","message":"50 mappings in 'requestMappingHandlerMapping'"}
{"@timestamp":"2025-08-09T15:40:10.460119-03:00","logger_name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping","message":"Patterns [/webjars/**, /**, /swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'"}
{"@timestamp":"2025-08-09T15:40:10.847925-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter","message":"ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:40:10.886328-03:00","logger_name":"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver","message":"ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice"}
{"@timestamp":"2025-08-09T15:40:11.192081-03:00","logger_name":"com.deliverytech.delivery.cache.CacheIntegrationTest","message":"Started CacheIntegrationTest in 5.221 seconds (process running for 5.784)"}
{"@timestamp":"2025-08-09T15:40:12.149469-03:00","logger_name":"org.hibernate.SQL","message":"\n    insert \n    into\n        restaurante\n        (ativo,avaliacao,categoria,data_criacao,endereco,nome,taxa_entrega,telefone,usuario_id,id) \n    values\n        (?,?,?,?,?,?,?,?,?,default)"}
{"@timestamp":"2025-08-09T15:40:12.185605-03:00","logger_name":"com.deliverytech.delivery.service.impl.RestauranteServiceImpl","message":"[N/A] Restaurante cadastrado com sucesso: id=1"}
{"@timestamp":"2025-08-09T15:40:12.335964-03:00","logger_name":"org.springframework.web.context.support.GenericWebApplicationContext","message":"Closing org.springframework.web.context.support.GenericWebApplicationContext@10fbbdb, started on Sat Aug 09 15:40:06 BRT 2025"}
{"@timestamp":"2025-08-09T15:40:12.365255-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists cliente cascade "}
{"@timestamp":"2025-08-09T15:40:12.366604-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists item_pedido cascade "}
{"@timestamp":"2025-08-09T15:40:12.367765-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists pedido cascade "}
{"@timestamp":"2025-08-09T15:40:12.368737-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists produto cascade "}
{"@timestamp":"2025-08-09T15:40:12.369712-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists restaurante cascade "}
{"@timestamp":"2025-08-09T15:40:12.370602-03:00","logger_name":"org.hibernate.SQL","message":"\n    drop table if exists usuarios cascade "}
